name: CD Workflow
on:
  release:
    types: [published]
jobs:
  build:
    runs-on: ubuntu-latest
    environment: production
    steps:
      - uses: actions/checkout@v3
      - uses: subosito/flutter-action@v2
        with: 
          channel: 'stable'
          architecture: x64

      - run: cd fivekmrun_app_flutter && flutter pub get
      - shell: bash
        env:
          STRAVA_CLIENT_ID: ${{ secrets.STRAVA_CLIENT_ID }}
          STRAVA_SECRET: ${{ secrets.STRAVA_SECRET }}
          GOOGLE_MAPS_KEY: ${{ secrets.GOOGLE_MAPS_KEY }}
        run: |
          mkdir ./fivekmrun_app_flutter/lib/private && cat << EOF > ./fivekmrun_app_flutter/lib/private/secrets.dart
          const stravaSecret = "$STRAVA_SECRET";
          const stravaClientId = "$STRAVA_CLIENT_ID";
          const googleMapsKey = "$GOOGLE_MAPS_KEY"; 
          EOF

      - name: Build appbundle
        run: flutter build appbundle --no-shrink

      - name: Sign App Bundle
        run: |
          echo "${{ secrets.KEYSTORE_BASE64 }}" | base64 --decode > /tmp/keystore.jks
          jarsigner -verbose -sigalg SHA1withRSA -digestalg SHA1 -keystore /tmp/keystore.jks -storepass ${{ secrets.KEYSTORE_PASSWORD }} -keypass ${{ secrets.KEYSTORE_PASSWORD }} build/app/outputs/bundle/release/app-release.aab ${{ secrets.KEYSTORE_ALIAS }}

      - name: Upload to Google Play
        uses: r0adkll/upload-google-play@v1
        with:
          serviceAccountJsonPlainText: ${{ secrets.SERVICE_ACCOUNT_JSON }}
          packageName: bg.fivekmpark.fivekmrun
          releaseFiles: build/app/outputs/flutter-apk/app-release.apk
          track: production
